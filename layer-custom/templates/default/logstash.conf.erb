input {
  lumberjack {
    port => 5000
    ssl_certificate => "/opt/logstash/lumberjack.crt"
    ssl_key => "/opt/logstash/lumberjack.key"
  }
}

filter {
  if [type] == "nginx-access" {
    grok {
      break_on_match => true
      match => [
        "message", "%{NGINXACCESSCACHEVHOST}",
        "message", "%{NGINXACCESSVHOST}",
        "message", "%{NGINXACCESS}",
        "message", "%{NGINXACCESSCACHE}"
      ]
    }

    mutate {
      convert => ["bytes", "integer"]
      remove_field => ["message"]
      #remove_tag => ["_grokparsefailure"]
    }

    date {
      match => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
    }
  }

  if [type] == "suricata-eve" {
    json {
      source => "message"
    }

    mutate {
      remove_field => ["message"]
    }

    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }

  if [clientip] {
    geoip {
      source => "clientip"
      target => "geoip"
      database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
      add_field => ["[geoip][coordinates]", "%{[geoip][longitude]}"]
      add_field => ["[geoip][coordinates]", "%{[geoip][latitude]}"]
    }

    mutate {
      convert => ["[geoip][coordinates]", "float"]
    }
  }

  if [src_ip] {
    geoip {
      source => "src_ip"
      target => "geoip"
      database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
      add_field => ["[geoip][coordinates]", "%{[geoip][longitude]}"]
      add_field => ["[geoip][coordinates]", "%{[geoip][latitude]}"]
    }

    mutate {
      convert => ["[geoip][coordinates]", "float"]
    }
  }
}

output {
  elasticsearch {
    host => "<%= @eshost %>"
    port => 80
    protocol => "http"
  }
}

